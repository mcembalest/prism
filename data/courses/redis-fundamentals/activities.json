{
  "activities": [
    {
      "id": "redis-hashes-basics",
      "name": "Redis Hashes - Basics",
      "targetSkills": ["redis-hash-create", "redis-hash-retrieve", "redis-hash-getall", "redis-hash-increment"],
      "level": "beginner",
      "summary": "Store and read hash fields.",
      "diagnostic": {
        "keywords": ["hash", "hashes", "field", "object", "profile"],
        "commands": [
          "HSET user:1 name Alice",
          "HGET user:1 name"
        ]
      },
      "exercises": [
        {
          "type": "worked-example",
          "title": "Storing User Data",
          "narration": "Build a user hash. HSET counts new fields.",
          "steps": [
            {
              "command": "HSET user:1 name \"Alice\"",
              "explanation": "Set name.",
              "expectedOutput": "(integer) 1"
            },
            {
              "command": "HSET user:1 email \"alice@example.com\" age \"30\"",
              "explanation": "Add email and age. Two new fields.",
              "expectedOutput": "(integer) 2"
            },
            {
              "command": "HGETALL user:1",
              "explanation": "Get all fields.",
              "expectedOutput": "1) \"name\"\\n2) \"Alice\"\\n3) \"email\"\\n4) \"alice@example.com\"\\n5) \"age\"\\n6) \"30\""
            }
          ],
          "followUpCommand": {
            "prompt": "Now you: add user email",
            "command": "HSET user:2 email alice@example.com",
            "teachingPoint": "1 = new field. Repeat returns 0."
          },
          "feedback": "Nice."
        },
        {
          "type": "command",
          "prompt": "Get that email",
          "command": "HGET user:2 email",
          "feedback": "Perfect.",
          "teachingPoint": "Use HGET for one field."
        },
        {
          "type": "command",
          "prompt": "Show all fields",
          "command": "HGETALL user:2",
          "feedback": "Great."
        },
        {
          "type": "command",
          "prompt": "Create product with name and price",
          "command": "HSET product:1 name \"Laptop\" price 999",
          "feedback": "Nice.",
          "teachingPoint": "Set multiple fields in one command."
        },
        {
          "type": "teach",
          "content": "Use HINCRBY to increment numeric fields.",
          "guidedCommands": [
            {
              "prompt": "Check price",
              "command": "HGET product:1 price",
              "teachingPoint": "Price is 999. Increase next."
            },
            {
              "prompt": "Increase price by 50 (HINCRBY)",
              "command": "HINCRBY product:1 price 50",
              "teachingPoint": "Returns 1049: new value after +50."
            },
            {
              "prompt": "Verify price",
              "command": "HGET product:1 price",
              "teachingPoint": "Now 1049. HINCRBY is atomic."
            }
          ],
          "feedback": "Nice."
        }
      ]
    },
    {
      "id": "redis-lists-basics",
      "name": "Redis Lists - Basics",
      "targetSkills": ["redis-list-push", "redis-list-range", "redis-list-pop", "redis-list-queue"],
      "level": "beginner",
      "summary": "Queues and feeds with lists.",
      "diagnostic": {
        "keywords": ["list", "lists", "queue", "tasks", "lpush", "rpush"],
        "commands": [
          "LPUSH queue \"task1\"",
          "LRANGE queue 0 -1"
        ]
      },
      "exercises": [
        {
          "type": "teach",
          "content": "Lists are ordered. LEFT vs RIGHT.",
          "guidedCommands": [
            {
              "prompt": "LPUSH a task (front)",
              "command": "LPUSH queue \"task2\"",
              "teachingPoint": "LPUSH adds to front."
            },
            {
              "prompt": "RPUSH a task (back)",
              "command": "RPUSH queue \"task3\"",
              "teachingPoint": "RPUSH adds to back. Order updated."
            },
            {
              "prompt": "Show list order",
              "command": "LRANGE queue 0 -1",
              "teachingPoint": "task2, task1, task3. Order matters."
            }
          ],
          "feedback": "Nice."
        },
        {
          "type": "command",
          "prompt": "LPOP left item",
          "command": "LPOP queue",
          "feedback": "Removed left item.",
          "teachingPoint": "FIFO: RPUSH + LPOP. LIFO: RPUSH + RPOP."
        },
        {
          "type": "teach",
          "content": "Use RPUSH+LPOP for a FIFO queue.",
          "guidedCommands": [
            {
              "prompt": "Queue a task",
              "command": "RPUSH queue \"process-payment\"",
              "teachingPoint": "Added to back. Typical job queue."
            },
            {
              "prompt": "Queue another task",
              "command": "RPUSH queue \"send-email\"",
              "teachingPoint": "Queued. Process in add order."
            }
          ],
          "feedback": "Task queue built."
        }
      ]
    }
  ]
}
